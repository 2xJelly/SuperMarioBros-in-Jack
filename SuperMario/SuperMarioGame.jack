class SuperMarioGame
{
	field Mario mario;
	field Map map;
	field int direction; /* 0 = At rest, 1 = Left, 2 = Right */
	field int screenPos;
	field int fps;

	field char key;
	field boolean exit;
	field int coin, score, time;
	field int framePassed;

	constructor SuperMarioGame new(int gameSpeed)
	{
		do Screen.clearScreen();

		let mario = Mario.new(0, 208);
		let map = Map.new();
		let screenPos = 0;
		let fps = gameSpeed;
		/* fps -> frame per second */

		return this;
	}

	method void run()
	{
		let key = 0;
		let exit = false;
		let coin = 0;
		let score = 0;
		let time = 999;
		let framePassed = fps;

		do Output.moveCursor(0, 0);
		do Output.printString("Coin: ");
		do Output.printInt(coin);

		do Output.moveCursor(0, 25);
		do Output.printString("SCORE: ");
		do Output.printInt(score);

		do Output.moveCursor(0, 53);
		do Output.printString("TIME: ");
		do Output.printInt(time);

		/* While Reading in the users command, react to it according to our rules */
		while(~exit)
		{

			/* Output the current coordinate of Mario */
			/*
			do Output.moveCursor(1, 0);
			do Output.printString("Pos: (");
			do Output.printInt(mario.getPosX());
			do Output.printString(", ");
			do Output.printInt(mario.getPosY());
			do Output.printString(")");
			*/

			/* Read an input from the user */
			let key = Keyboard.keyPressed();

			/* Now we have an input from the user */
			if(key = 81) { let exit = true; } // q key
			if(key = 130) { let direction = 1; } // Left arrow
			if(key = 132) { let direction = 2; } // right arrow
			if((key = 32) & marioOnGround() ) // Spacebar, and Mario is on the ground
			{ do mario.jump(); }

			/* Now move Mario if Mario is not touching any block */
			do move();

			/* If Mario reach the bottom, game over!!! */
			if ( gg() ) { let exit = true; }

			/* Do Transition of map if needed */
			if (mario.getPosX() > 383) { do transition(); }

			/* Wait for 1 frame to pass */
			do Sys.wait(1000/fps);

			let framePassed = framePassed - 1;
			/* If framePassed <= 0, 1 second has passes */
			if(~(framePassed > 0) )
			{
				let time = time - 1;
				let framePassed = fps;
				/* Also, print the time since it has changed */
				do Output.moveCursor(0, 53);
				do Output.printString("TIME: ");
				do Output.printInt(time);
			}
		}

		return;
	}

	method boolean gg()
	{
		var boolean ans;
		let ans = false;
		/* If Mario reach the bottom, gg */
		if ( 239 < mario.getPosY() ) { let ans = true; }
		return ans;
	}

	method boolean marioOnGround()
	{
		var boolean onG;
		let onG = false;
		if(map.touchGround(mario.getPosX()+screenPos, mario.getPosY()) ) { let onG = true; }
		if(map.touchBelow(mario.getPosX()+screenPos, mario.getPosY()) ) { let onG = true; }

		return onG;
	}

	/* Move the appropriate direction according to the key(direction) */
  method void move()
  {
		/* If Mario is not touching left/right, let Mario move left/right */
    if (key = 130 & (~map.touchLeftSides(mario.getPosX()+screenPos, mario.getPosY())) & (map.touchLeft(mario.getPosX()+screenPos, mario.getPosY()) = false) ) { do mario.moveLeft(); }
    if (key = 132 & (~map.touchRightSides(mario.getPosX()+screenPos, mario.getPosY())) & (map.touchRight(mario.getPosX()+screenPos, mario.getPosY()) = false) ) { do mario.moveRight(); }

		/* If Mario is jumping, and there is a block above him, Mario will stop jumping */
		if ( mario.isJump() & (map.touchAbove(mario.getPosX()+screenPos, mario.getPosY())) )
		{ do mario.stopJump(); }

    /* If Mario is not jumping, let Mario fall */
    if ( (~mario.isJump()) & (marioOnGround() = false))
    { do mario.moveDown(); }

    /* If Mario is still jumping, let Mario moves up */
    if (mario.isJump())
    {
      do mario.moveUp();
      do mario.jumpLess();
    }

    return;
  }

	/* Move the map to the right by 32 pixels */
	method void transition()
	{
		let screenPos = screenPos + 32;
		do mario.transition();
		do map.transition();
		return;
	}

}
