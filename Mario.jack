class Mario
{
  field Pos pos;
  static int jumpDuration;
  //field Draw draw;

  /* Build a new Mario!!! */
  constructor Mario new(int x, int y)
  {
    let pos = Pos.new(x, y);
    let jumpDuration = 0;
    do draw();

    return this;
  }

  /* Return position x */
  method int getPosX()
  { return pos.getX(); }

  /* Return position y */
  method int getPosY()
  { return pos.getY(); }

  /* Draw Mario */
  method void draw()
  {
    do Sprite.drawMario(getPosX(), getPosY());
    //do Screen.setColor(true);
    //do Screen.drawRectangle(pos.getX(), pos.getY(), pos.getX() + 15, pos.getY() + 15);
    return;
  }

  /* Erase Mario */
  method void erase()
  {
    // do Sprite.eraseMario(getPosX(), getPosY());
    do Screen.setColor(false);
    do Screen.drawRectangle(pos.getX(), pos.getY(), pos.getX() + 15, pos.getY() + 15);
    return;
  }

  /* Move the Mario to the right by move pixels */
  method void transition(int move)
  {
    do erase();
    do pos.updateX(pos.getX() + move);
    do draw();
    return;
  }

  /* Check if Mario is jumping */
  method boolean isJump()
  {
    var boolean ans;
    if (0 < jumpDuration) { let ans = true; }
    else { let ans = false; }
    return ans;
  }

  /* Decrease jump time of Mario by 1 frame */
  method void jumpLess()
  {
    let jumpDuration = jumpDuration - 1;
    return;
  }

  /* Let Mario jump */
  method void jump()
  {
    let jumpDuration = 20; // Jump for 20 frames
    return;
  }

  /* Let Mario stop jumping */
  method void stopJump()
  {
    let jumpDuration = 0;
    return;
  }

  /* Move 2 pixels upwards */
  method void moveUp()
  {
    /* Beware not to go out of bounds */
    if(3 < pos.getY())
    {
      do erase();
      do pos.updateY(pos.getY() - 4);
      do draw();
    }

    return;
  }

  /* Move 2 pixels downwards */
  method void moveDown()
  {
    /* Beware not to go out of bounds */
    if(pos.getY() < 237)
    {
      do erase();
      do pos.updateY(pos.getY() + 4);
      do draw();
    }

    return;
  }

  /* Move 2 pixels to the left */
  method void moveLeft()
  {
    /* Beware not to go out of bounds */
    if(1 < pos.getX())
    {
      do erase();
      do pos.updateX(pos.getX() - 2);
      do draw();
    }

    return;
  }

  /* Move 2 pixels to the right */
  method void moveRight()
  {
    /* Beware not to go out of bounds */
    if(pos.getX() < 495)
    {
      do erase();
      do pos.updateX(pos.getX() + 2);
      do draw();
    }

    return;
  }

  function void superjump()
  {
    let jumpDuration = 40;
    return;
  }


}
